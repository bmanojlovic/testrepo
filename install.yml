---
- hosts: all

  tasks:
  - name: yum upgrade
    yum: name=* state=latest
    register: data_yum
    when: ansible_pkg_mgr == 'yum'

  - name: apt upgrade
    apt: upgrade=yes update_cache=yes
    register: data_apt
    when: ansible_pkg_mgr == 'apt'

  - name: yum reboot-check
    shell: 'if [ "$(rpm -q kernel --queryformat ''%{installtime} %{version}-%{release}.%{arch}\n'' | sort -n -k1 | tail -1 | cut -d '' '' -f 2)" = "$(uname -r)" ]; then echo "no"; else echo "yes"; fi'
    register: reboot_yum
    when: ansible_pkg_mgr == 'yum'

  - name: apt reboot-check
    shell: 'if [ -e "/var/run/reboot-required" ]; then echo "yes"; else echo "no"; fi'
    register: reboot_apt
    when: ansible_pkg_mgr == 'apt'

  - name: yum summary
    shell: 'echo {{ data_yum.results | join(" ") | quote }} | mail -s "[ANSIBLE] Upgraded {{ ansible_fqdn }}" "{{ admin_mail }}"'
    when: mail_info == 'yes' and ansible_pkg_mgr == 'yum' and data_yum.changed

  - name: apt summary
    shell: 'echo {{ data_apt.stdout | quote }} | mail -s "[ANSIBLE] Upgraded {{ ansible_fqdn }}" "{{ admin_mail }}"'
    when: mail_info == 'yes' and ansible_pkg_mgr == 'apt' and data_apt.changed

  - name: reboot mail
    shell: 'echo "Reboot required on {{ ansible_fqdn }}" | mail -s "[ANSIBLE] Reboot required on {{ ansible_fqdn }}" "{{ admin_mail }}"'
    when: auto_reboot == 'no' and ( ansible_pkg_mgr == 'yum' and reboot_yum.stdout == 'yes' or ansible_pkg_mgr == 'apt' and reboot_apt.stdout == 'yes' )

  - name: auto-reboot
    command: shutdown -r now 'Rebooting to complete system upgrade'
    when: auto_reboot == 'yes' and ( ansible_pkg_mgr == 'yum' and reboot_yum.stdout == 'yes' or ansible_pkg_mgr == 'apt' and reboot_apt.stdout == 'yes' )
